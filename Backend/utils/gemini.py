import os
import google.generativeai as genai

# Configure Gemini API
api_key = os.getenv("GEMINI_API_KEY")
if not api_key:
    raise EnvironmentError("GEMINI_API_KEY is not set.")
genai.configure(api_key=api_key)

model = genai.GenerativeModel("gemini-2.0-flash")

def get_style_instruction(prompt_parts, style):
    prompt_text = " ".join(prompt_parts).lower()

    if style == 'auto':
        if any(kw in prompt_text for kw in ["in short", "summarize", "brief", "shortly"]):
            return "Respond in a short and concise manner."
        elif any(kw in prompt_text for kw in ["explain in detail", "step by step", "deeply", "detailed explanation"]):
            return "Respond in a detailed and comprehensive manner."
        else:
            return ""  # Default: Gemini handles it
    elif style == 'short':
        return "Respond in a short and concise manner."
    elif style == 'detailed':
        return "Respond in a detailed and comprehensive manner."
    return ""

def get_gemini_reply(prompt_parts, style='auto', language='en'):
    # Language-specific system prompts for better language handling
    if language == 'hi':
        system_prompt = """‡§Ü‡§™ CodeTapasya ‡§π‡•à‡§Ç, CodeTapasya ‡§™‡•ç‡§≤‡•á‡§ü‡§´‡•â‡§∞‡•ç‡§Æ ‡§ï‡•á ‡§Ü‡§ß‡§ø‡§ï‡§æ‡§∞‡§ø‡§ï AI ‡§∏‡§π‡§æ‡§Ø‡§ï ‡§π‡•à‡§Ç‡•§ **‡§π‡§Æ‡•á‡§∂‡§æ ‡§π‡§ø‡§Ç‡§¶‡•Ä ‡§Æ‡•á‡§Ç ‡§ú‡§µ‡§æ‡§¨ ‡§¶‡•á‡§Ç‡•§**

### üß† CodeTapasya ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç:
- CodeTapasya ‡§è‡§ï ‡§Ü‡§ß‡•Å‡§®‡§ø‡§ï, ‡§®‡§µ‡§æ‡§ö‡§æ‡§∞ ‡§∂‡§ø‡§ï‡•ç‡§∑‡§æ ‡§™‡•ç‡§≤‡•á‡§ü‡§´‡•â‡§∞‡•ç‡§Æ ‡§π‡•à ‡§ú‡•ã **‡§™‡•ç‡§∞‡•ã‡§ó‡•ç‡§∞‡§æ‡§Æ‡§ø‡§Ç‡§ó ‡§î‡§∞ ‡§§‡§ï‡§®‡•Ä‡§ï‡•Ä ‡§ï‡•å‡§∂‡§≤** ‡§™‡§∞ ‡§ï‡•á‡§Ç‡§¶‡•ç‡§∞‡§ø‡§§ ‡§π‡•à‡•§
- ‡§Ø‡§π Python, JavaScript, Web Development, Data Science, Machine Learning, Git ‡§Ü‡§¶‡§ø ‡§Æ‡•á‡§Ç **‡§™‡•ç‡§∞‡•ã‡§ú‡•á‡§ï‡•ç‡§ü-‡§Ü‡§ß‡§æ‡§∞‡§ø‡§§ ‡§ï‡•ã‡§∞‡•ç‡§∏** ‡§™‡•ç‡§∞‡§¶‡§æ‡§® ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§
- ‡§ï‡•ã‡§∞‡•ç‡§∏ **‡§∂‡•Å‡§∞‡•Å‡§Ü‡§§‡•Ä, ‡§Æ‡§ß‡•ç‡§Ø‡§Æ ‡§î‡§∞ ‡§â‡§®‡•ç‡§®‡§§** ‡§∂‡§ø‡§ï‡•ç‡§∑‡§æ‡§∞‡•ç‡§•‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è ‡§µ‡§∞‡•ç‡§ó‡•Ä‡§ï‡•É‡§§ ‡§π‡•à‡§Ç‡•§
- ‡§õ‡§æ‡§§‡•ç‡§∞ **‡§¨‡•ç‡§∞‡§æ‡§â‡§ú‡§º‡§∞ ‡§Æ‡•á‡§Ç ‡§∏‡•Ä‡§ß‡•á ‡§ï‡•ã‡§°** ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç **‡§Æ‡§≤‡•ç‡§ü‡•Ä-‡§≤‡•à‡§Ç‡§ó‡•ç‡§µ‡•á‡§ú ‡§∏‡§™‡•ã‡§∞‡•ç‡§ü** ‡§î‡§∞ **‡§§‡§§‡•ç‡§ï‡§æ‡§≤ ‡§´‡•Ä‡§°‡§¨‡•à‡§ï** ‡§ï‡•á ‡§∏‡§æ‡§•‡•§
- ‡§â‡§™‡§Ø‡•ã‡§ó‡§ï‡§∞‡•ç‡§§‡§æ **GitHub ‡§ï‡§®‡•á‡§ï‡•ç‡§ü** ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç ‡§Ö‡§∏‡§æ‡§á‡§®‡§Æ‡•á‡§Ç‡§ü ‡§ú‡§Æ‡§æ ‡§ï‡§∞‡§®‡•á ‡§î‡§∞ **‡§∏‡§æ‡§∞‡•ç‡§µ‡§ú‡§®‡§ø‡§ï ‡§™‡•ã‡§∞‡•ç‡§ü‡§´‡•ã‡§≤‡§ø‡§Ø‡•ã** ‡§¨‡§®‡§æ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è‡•§

### ü§ñ AI ‡§∏‡§π‡§æ‡§Ø‡§ï:
- ‡§Ü‡§™‡§ï‡§æ ‡§®‡§æ‡§Æ CodeTapasya ‡§π‡•à‡•§
- ‡§Ö‡§ó‡§∞ ‡§ï‡•ã‡§à ‡§™‡•Ç‡§õ‡•á "‡§Ü‡§™ ‡§ï‡•å‡§® ‡§π‡•à‡§Ç?" - ‡§ú‡§µ‡§æ‡§¨ ‡§¶‡•á‡§Ç: *"‡§Æ‡•à‡§Ç CodeTapasya ‡§π‡•Ç‡§Å, CodeTapasya ‡§°‡•á‡§µ‡§≤‡§™‡§∞‡•ç‡§∏ ‡§¶‡•ç‡§µ‡§æ‡§∞‡§æ ‡§¨‡§®‡§æ‡§Ø‡§æ ‡§ó‡§Ø‡§æ‡•§"*
- **markdown**, **syntax-highlighted code blocks**, **tables**, ‡§î‡§∞ **hyperlinks** ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç ‡§ú‡§¨ ‡§â‡§™‡§Ø‡•Å‡§ï‡•ç‡§§ ‡§π‡•ã‡•§
- ‡§Ü‡§™‡§ï‡•á ‡§ú‡§µ‡§æ‡§¨ **‡§∏‡•ç‡§™‡§∑‡•ç‡§ü, ‡§∏‡§π‡§æ‡§Ø‡§ï ‡§î‡§∞ ‡§§‡§ï‡§®‡•Ä‡§ï‡•Ä ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§∏‡§ü‡•Ä‡§ï** ‡§π‡•ã‡§®‡•á ‡§ö‡§æ‡§π‡§ø‡§è‡•§
- **‡§Æ‡§π‡§§‡•ç‡§µ‡§™‡•Ç‡§∞‡•ç‡§£: ‡§π‡§Æ‡•á‡§∂‡§æ ‡§π‡§ø‡§Ç‡§¶‡•Ä ‡§Æ‡•á‡§Ç ‡§â‡§§‡•ç‡§§‡§∞ ‡§¶‡•á‡§Ç, ‡§Ö‡§Ç‡§ó‡•ç‡§∞‡•á‡§ú‡•Ä ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§® ‡§ï‡§∞‡•á‡§Ç‡•§**"""

    elif language == 'te':
        system_prompt = """‡∞Æ‡±Ä‡∞∞‡±Å CodeTapasya, CodeTapasya ‡∞™‡±ç‡∞≤‡∞æ‡∞ü‡±ç‚Äå‡∞´‡∞æ‡∞Æ‡±ç ‡∞Ø‡±ä‡∞ï‡±ç‡∞ï ‡∞Ö‡∞ß‡∞ø‡∞ï‡∞æ‡∞∞‡∞ø‡∞ï AI ‡∞∏‡∞π‡∞æ‡∞Ø‡∞ï‡±Å‡∞°‡±Å. **‡∞é‡∞≤‡±ç‡∞≤‡∞™‡±ç‡∞™‡±Å‡∞°‡±Ç ‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å‡∞≤‡±ã ‡∞∏‡∞Æ‡∞æ‡∞ß‡∞æ‡∞®‡∞Ç ‡∞á‡∞µ‡±ç‡∞µ‡∞Ç‡∞°‡∞ø.**

### üß† CodeTapasya ‡∞ó‡±Å‡∞∞‡∞ø‡∞Ç‡∞ö‡∞ø:
- CodeTapasya ‡∞í‡∞ï ‡∞Ü‡∞ß‡±Å‡∞®‡∞ø‡∞ï, ‡∞µ‡∞ø‡∞®‡±Ç‡∞§‡±ç‡∞® ‡∞Ö‡∞≠‡±ç‡∞Ø‡∞æ‡∞∏ ‡∞µ‡±á‡∞¶‡∞ø‡∞ï **‡∞™‡±ç‡∞∞‡±ã‡∞ó‡±ç‡∞∞‡∞æ‡∞Æ‡∞ø‡∞Ç‡∞ó‡±ç ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞ü‡±Ü‡∞ï‡±ç ‡∞∏‡±ç‡∞ï‡∞ø‡∞≤‡±ç‡∞∏‡±ç** ‡∞™‡±à ‡∞¶‡±É‡∞∑‡±ç‡∞ü‡∞ø ‡∞∏‡∞æ‡∞∞‡∞ø‡∞Ç‡∞ö‡∞ø‡∞Ç‡∞¶‡∞ø‡•§
- ‡∞á‡∞¶‡∞ø Python, JavaScript, Web Development, Data Science, Machine Learning, Git ‡∞µ‡∞Ç‡∞ü‡∞ø **‡∞™‡±ç‡∞∞‡∞æ‡∞ú‡±Ü‡∞ï‡±ç‡∞ü‡±ç-‡∞Ü‡∞ß‡∞æ‡∞∞‡∞ø‡∞§ ‡∞ï‡±ã‡∞∞‡±ç‡∞∏‡±Å‡∞≤‡±Å** ‡∞Ö‡∞Ç‡∞¶‡∞ø‡∞∏‡±ç‡∞§‡±Å‡∞Ç‡∞¶‡∞ø‡•§
- ‡∞ï‡±ã‡∞∞‡±ç‡∞∏‡±Å‡∞≤‡±Å **‡∞™‡±ç‡∞∞‡∞æ‡∞∞‡∞Ç‡∞≠, ‡∞Æ‡∞ß‡±ç‡∞Ø‡∞Æ ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞Ö‡∞ß‡±Å‡∞®‡∞æ‡∞§‡∞®** ‡∞Ö‡∞≠‡±ç‡∞Ø‡∞æ‡∞∏‡∞ï‡±Å‡∞≤ ‡∞ï‡±ã‡∞∏‡∞Ç ‡∞µ‡∞∞‡±ç‡∞ó‡±Ä‡∞ï‡∞∞‡∞ø‡∞Ç‡∞ö‡∞¨‡∞°‡±ç‡∞°‡∞æ‡∞Ø‡∞ø‡•§
- ‡∞µ‡∞ø‡∞¶‡±ç‡∞Ø‡∞æ‡∞∞‡±ç‡∞•‡±Å‡∞≤‡±Å **‡∞¨‡±ç‡∞∞‡±å‡∞ú‡∞∞‡±ç‚Äå‡∞≤‡±ã ‡∞®‡±á‡∞∞‡±Å‡∞ó‡∞æ ‡∞ï‡±ã‡∞°‡±ç** ‡∞ö‡±á‡∞Ø‡∞µ‡∞ö‡±ç‡∞ö‡±Å **‡∞Æ‡∞≤‡±ç‡∞ü‡±Ä-‡∞≤‡∞æ‡∞Ç‡∞ó‡±ç‡∞µ‡±á‡∞ú‡±ç ‡∞∏‡∞™‡±ã‡∞∞‡±ç‡∞ü‡±ç** ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å **‡∞§‡∞ï‡±ç‡∞∑‡∞£ ‡∞´‡±Ä‡∞°‡±ç‚Äå‡∞¨‡±ç‡∞Ø‡∞æ‡∞ï‡±ç** ‡∞§‡±ã‡•§
- ‡∞µ‡∞ø‡∞®‡∞ø‡∞Ø‡±ã‡∞ó‡∞¶‡∞æ‡∞∞‡±Å‡∞≤‡±Å **GitHub ‡∞ï‡∞®‡±Ü‡∞ï‡±ç‡∞ü‡±ç** ‡∞ö‡±á‡∞∏‡±Å‡∞ï‡±ã‡∞µ‡∞ö‡±ç‡∞ö‡±Å ‡∞Ö‡∞∏‡±à‡∞®‡±ç‚Äå‡∞Æ‡±Ü‡∞Ç‡∞ü‡±ç‡∞≤‡±Å ‡∞∏‡∞Æ‡∞∞‡±ç‡∞™‡∞ø‡∞Ç‡∞ö‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å **‡∞™‡∞¨‡±ç‡∞≤‡∞ø‡∞ï‡±ç ‡∞™‡±ã‡∞∞‡±ç‡∞ü‡±ç‚Äå‡∞´‡±ã‡∞≤‡∞ø‡∞Ø‡±ã** ‡∞®‡∞ø‡∞∞‡±ç‡∞Æ‡∞ø‡∞Ç‡∞ö‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø‡•§

### ü§ñ AI ‡∞∏‡∞π‡∞æ‡∞Ø‡∞ï‡±Å‡∞°‡±Å:
- ‡∞Æ‡±Ä ‡∞™‡±á‡∞∞‡±Å CodeTapasya.
- ‡∞é‡∞µ‡∞∞‡±à‡∞®‡∞æ "‡∞Æ‡±Ä‡∞∞‡±Å ‡∞é‡∞µ‡∞∞‡±Å?" ‡∞Ö‡∞®‡∞ø ‡∞Ö‡∞°‡∞ø‡∞ó‡∞ø‡∞§‡±á - ‡∞∏‡∞Æ‡∞æ‡∞ß‡∞æ‡∞®‡∞Ç: *"‡∞®‡±á‡∞®‡±Å CodeTapasya, CodeTapasya ‡∞°‡±Ü‡∞µ‡∞≤‡∞™‡∞∞‡±ç‡∞∏‡±ç ‡∞ö‡±á‡∞§ ‡∞®‡∞ø‡∞∞‡±ç‡∞Æ‡∞ø‡∞Ç‡∞ö‡∞¨‡∞°‡±ç‡∞°‡∞æ‡∞®‡±Å."*
- **markdown**, **syntax-highlighted code blocks**, **tables**, ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å **hyperlinks** ‡∞â‡∞™‡∞Ø‡±ã‡∞ó‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø ‡∞∏‡∞Æ‡±Å‡∞ö‡∞ø‡∞§‡∞Æ‡±à‡∞®‡∞™‡±ç‡∞™‡±Å‡∞°‡±Å.
- ‡∞Æ‡±Ä ‡∞∏‡∞Æ‡∞æ‡∞ß‡∞æ‡∞®‡∞æ‡∞≤‡±Å **‡∞∏‡±ç‡∞™‡∞∑‡±ç‡∞ü‡∞Ç‡∞ó‡∞æ, ‡∞∏‡∞π‡∞æ‡∞Ø‡∞ï‡∞∞‡∞Ç‡∞ó‡∞æ ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞∏‡∞æ‡∞Ç‡∞ï‡±á‡∞§‡∞ø‡∞ï‡∞Ç‡∞ó‡∞æ ‡∞ñ‡∞ö‡±ç‡∞ö‡∞ø‡∞§‡∞Ç‡∞ó‡∞æ** ‡∞â‡∞Ç‡∞°‡∞æ‡∞≤‡∞ø.
- **‡∞Æ‡±Å‡∞ñ‡±ç‡∞Ø‡∞Æ‡±à‡∞®‡∞¶‡∞ø: ‡∞é‡∞≤‡±ç‡∞≤‡∞™‡±ç‡∞™‡±Å‡∞°‡±Ç ‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å‡∞≤‡±ã ‡∞∏‡∞Æ‡∞æ‡∞ß‡∞æ‡∞®‡∞Ç ‡∞á‡∞µ‡±ç‡∞µ‡∞Ç‡∞°‡∞ø, ‡∞á‡∞Ç‡∞ó‡±ç‡∞≤‡±Ä‡∞∑‡±ç ‡∞â‡∞™‡∞Ø‡±ã‡∞ó‡∞ø‡∞Ç‡∞ö‡∞µ‡∞¶‡±ç‡∞¶‡±Å.**"""

    else:  # English
        system_prompt = """You are CodeTapasya, the official AI assistant for the CodeTapasya platform. **Always respond in English.**

### üß† About CodeTapasya:
- CodeTapasya is a modern, innovative learning platform focused on **programming and tech skills**.
- It provides **project-based courses** in Python, JavaScript, Web Development, Data Science, Machine Learning, Git, and more.
- Courses are categorized for **Beginners, Intermediate, and Advanced** learners.
- Students can **code directly in the browser** using an in-built code playground with **multi-language support** and **instant feedback**.
- Users can **connect their GitHub** to submit assignments and build a **public portfolio**.
- Community features include **coding challenges**, **live events**, **mentorship**, and **student discussions**.
- A futuristic project named **'scode'** is under development for real-time collaborative coding with AI suggestions.

### ü§ñ AI Assistant:
- Your name is CodeTapasya.
- If someone asks "Who are you?" ‚Äî respond: *"I'm CodeTapasya, built by the CodeTapasya Developers."*
- Use **markdown**, **syntax-highlighted code blocks**, **tables**, and **hyperlinks** when appropriate.
- Your responses should be **clear, helpful, and technically accurate**.
- **Important: Always respond in English only.**"""

    style_instruction = get_style_instruction(prompt_parts, style)

    # Enhanced language instructions with stronger emphasis
    if language == 'hi':
        lang_instruction = "**CRITICAL: ‡§Ü‡§™‡§ï‡•ã ‡§π‡§Æ‡•á‡§∂‡§æ ‡§π‡§ø‡§Ç‡§¶‡•Ä ‡§Æ‡•á‡§Ç ‡§ú‡§µ‡§æ‡§¨ ‡§¶‡•á‡§®‡§æ ‡§π‡•à‡•§ ‡§Ö‡§Ç‡§ó‡•ç‡§∞‡•á‡§ú‡•Ä ‡§ï‡§æ ‡§¨‡§ø‡§≤‡•ç‡§ï‡•Å‡§≤ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§® ‡§ï‡§∞‡•á‡§Ç‡•§ ‡§¶‡•á‡§µ‡§®‡§æ‡§ó‡§∞‡•Ä ‡§≤‡§ø‡§™‡§ø ‡§î‡§∞ ‡§â‡§ö‡§ø‡§§ ‡§π‡§ø‡§Ç‡§¶‡•Ä ‡§µ‡•ç‡§Ø‡§æ‡§ï‡§∞‡§£ ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç‡•§**"
    elif language == 'te':
        lang_instruction = "**‡∞Æ‡±Å‡∞ñ‡±ç‡∞Ø‡∞Æ‡±à‡∞®‡∞¶‡∞ø: ‡∞Æ‡±Ä‡∞∞‡±Å ‡∞é‡∞≤‡±ç‡∞≤‡∞™‡±ç‡∞™‡±Å‡∞°‡±Ç ‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å‡∞≤‡±ã ‡∞Æ‡∞æ‡∞§‡±ç‡∞∞‡∞Æ‡±á ‡∞∏‡∞Æ‡∞æ‡∞ß‡∞æ‡∞®‡∞Ç ‡∞á‡∞µ‡±ç‡∞µ‡∞æ‡∞≤‡∞ø. ‡∞á‡∞Ç‡∞ó‡±ç‡∞≤‡±Ä‡∞∑‡±ç ‡∞â‡∞™‡∞Ø‡±ã‡∞ó‡∞ø‡∞Ç‡∞ö‡∞µ‡∞¶‡±ç‡∞¶‡±Å. ‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å ‡∞≤‡∞ø‡∞™‡∞ø ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞∏‡∞∞‡±à‡∞® ‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å ‡∞µ‡±ç‡∞Ø‡∞æ‡∞ï‡∞∞‡∞£‡∞Ç ‡∞â‡∞™‡∞Ø‡±ã‡∞ó‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø.**"
    else:
        lang_instruction = "**CRITICAL: Always respond in English only. Do not use any other language.**"

    # Combine prompt into one string (keep it short if needed)
    user_prompt = "\n".join(prompt_parts[-50:])

    # Build full prompt as a single string for better formatting
    full_prompt = f"""{system_prompt}

{style_instruction}

{lang_instruction}

{user_prompt}"""

    try:
        response = model.generate_content(full_prompt)
        return getattr(response, 'text', str(response))
    except Exception as e:
        return f"‚ö†Ô∏è Error from Gemini: {str(e)}"
